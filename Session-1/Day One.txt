Website
---------

There are two types of website
	1. Static Website 
	---------------------
	- Where user can't do any interaction (Wickipedia)

	2. Dynamic Website
	---------------------
	- where user can do interactions( Login, register, update profile,like,comments etc)
	- examples: facebook.com,amazon.in


Programming Language:
----------------------

A language which is sused to create a program  using that you can communicate with your computer system
or with the application.

Example: Python,JS,C#,C,C++,Java

How it is working?
------------------
- programming language means where you can not run the program directly,first we have to convert it in machine understable code and then only we can run it.

- machine understable code is called as byte code(native code) which you can execute


- to convert your program into native code you required a compiler which will compile your program into byte code

- Each Programming Language has its own Compiler.

---------------------------------------------------------------------------------------------------------------


WebApplication
---------------
- it is divided into three parts
	1. Frontend
	2. Backend
	3. Database
 (some time backend and database may be at the same location)



----------------------------------------------------------------


Front End:
	- means view(GUI Graphic User Interface OR Representation Of Your Application)
	- the things or information like Buttons, Images, that we want to show to client/User
	- we can create using HTML,CSS,JS etc...
Back End:
	- means user can't see becuase its a logic written to process  the user request

	- that we can write using the languages like: Java,c#, Python...

Database:
	-Its storage which storing all your information of application
	-examples: oracle,MySql,MS SQL Server,MA Access etc..

---------------------------------------------------------------------------------------------------------------

BASIC OF PROGRAMMING LANGUAGE
=============================

VARIABLE:
	- whose value can be varied and not fixed everytime
	- whenever you try to work with some program you required to take input from user and process the input and generate the output
	- for that you require some temperary storage to store this input and output values. 
	- for that we can declare varibles
	- it store the value and you can process the same.

IDENTIFIER:

	- TO INDENTIFY A variable created, we require indentifier
	- we can say that name of varibale
	- to name a varibale we need to foolow some set of rules

Rules:
	1. varibale name van not start with number (1num is not valid)
	2. it can be an alphanumeric (num1 is valid)
	3. No Special characters are allowed (.,?/ space etc)
	4. Only _ and $ you can use while giving the variable name.
	5. it can not  be more than 255 character long.
	6. naming convensions: first word should be in lower case,if it contains more words then second word first letter should be in capital 
	(eg: firstName,lastName,monileNo...) Or
	(eg: first_name,last_name,mobile_no)
	7. should not give the name of variable with reserved keywords


KEYWORD:
----------------------------------------------------------------------------

- a specific keyword  which are basically used to write code in programming langugae.
-like if, else, switch, inlcude, int, float, boolean,double,char etc...


DataTypes:
----------------------------------------------------------------------------

- whenever you try to store your data , your memory must asign a memory size to that varibale so that it can store values inside the same, that you can define with the type of  your data.means your data can be a number, decimal number, text, single character, or either true or false.

1. WHOLE NUMBER(0,1,2,3,4......) : it can be zero or positive : int

2. DECIMAL NUMBER(1.2, 4.6,negative or positive or zero but with floating points): float

3. SINGLE CHARACTER('a','l') : char

4. TEXT - sequence of characters ("NIKUNJ")- Array of char

5. single bit value (0 or 1)--0-false, 1-true



---------------------------------------------------------------------------------------------------------------
Syntax:
------------------------
below is the structure of your basic c program



#include<stdio.h>

int main(){
    
    printf("Hello From Simplilearn");
}

-----------------------------------------------

#include include library mentioned inside angle brackets menas if you want to  use any library then take the permission from the same and start using its function
	like: #include<stdio.h>

stdio.h is the library which provides function related to standard input and output.


int main(){ }--- called as main function (from where program starts its execution)

int is return type means when function executed it return some value.

main is the method name where () says no parameter required to run this function

if you want to pass parameters the function look like this main(int num1, int num2)

{ } called as a block of code where you should write sataments for your logic .

printf is the fucntion avaiable in studio.h library which is used to  display some value as an output

each statement must ends with semicolon(;) 


----------------------------------------------------------------------------------------------------

Simple Program with Varibale declaration

#include<stdio.h>

int main(){
    
   
    int num1=10;
    int num2=20;
    
    int result= num1+num2;
    
    printf("Number  1=%d \n",num1);
    printf("Number 2=%d \n",num2);
    printf("Result = %d \n",result);
    printf("%d +%d=%d\n",num1,num2,result);
}




--------------------------------------------------------------------------------------------------
\n is used to separate line from two output.




Operators
---------------------------------------------------

its symbol which we can use to perform the operation on operands(varibale)


Arithmatic Operators

+ addition
- subtraction
* multiplication
/ division


#include<stdio.h>

int main(){
    
    int num1=10;
    int num2= 20;
    
    int add= num1+num2;
    int sub= num1-num2;
    int mul= num1*num2;
    int divide= num1/num2;
    
    printf("Number 1=%d \n",num1);
    printf("Number 2=%d \n",num2);
    
    printf("%d + %d =%d \n",num1,num2,add);
    printf("%d -%d =%d \n",num1,num2,sub);
    
    //display the result of mul and divide
}



----------------------------------------------------------------------------------------

COMMENTS
------------
-they are non executable code in your program (not run in the program)

-we can write this for developers understanding

-there are two types of comments
	1.  SINGLE LINE
	2.  MULTI LINE

1. SINGLE LINE
		//This is my comment
2. MULTI LINE

	/*

	This is multiline commets
	Developer Name: Nikunj Soni
	Date: 3rd Sept 2022

	*/

------------------------------------------------------------------------------------------------

ALGORITHM:

- it is set of well defined instructions to solve a particular problem.
- it takes a set of input(s) and produces the desire output. For ex: 
	1. Take Two Number Input
	2. Add numbers  using the operator
	3. Display the result
---------------------------------------------------------------------------------------------------------------
Quality of good Algorithm

1. input and out put should be defined clearly
2. Each step in the algorithm should be clear
3. Algorithms shoudn't includes computer codes. instead of this alorithm should be written in such a waty that it can be used in different programming langugages.




---------------------------------------------------------------------------------------------------------------
Relational Operator 

used to compare:

<  ------>less than
>  ------> Greater than
<= ------> Less than or equals
>= ------>greter than or equals
== ------> equals
!= ------> not equals


prepare one program out of any of the above operator and get the result 
---------------------------------------------------------------------------------------------------------------
when you want to check some condition ,conditional statements are used for checking conditions

if, else if we can use for condition

-----------------------------------------------------
syntax
----------


if(condition)
{

		//write your statement for correct condition 
}

else{
		//write the statement for incorrect condition

}




Example:



#include <stdio.h>

int main()
{
    
    int num1= 50;
    int num2=20;
    
    if(num1>num2){
        printf("%d is larger",num1);
    }
    else{
        printf("%d is smaller",num2);
    }
     
     
}





Task:
--------------------------------

1. Write a program to simple display your name, address, phone, Qualification details line by line.
2. WAP Calculate area of Square and Rectangle
	- Area of Square =(side * Side)
	- Area of Rectangle = Length X Breadth
3. WAP to calculate area of circle.
	- Area of circle= pi * r * r
	- pi = 3.14
	(Hint: declare a variable float pi=3.14)
4. WAP to calculate perimeter of square and rectangle
	-perimeter is sum of all sides
	-perimeter of square = 4(sides)
	-perimeter of rectangle =l+l+b+b= 2(l+b)

5. WAP to calculate Circumference of Circle (2 * pi *r)

6. WAP to calculate Simple interest
	formula: PNR/100
	P: principle amount (3000)
	N: no.of years (3)
	R. rate of interest (8.40)

7. WAP to check the user is valid for vote or not?
	(hint : age>18)

8. WAP to check whether the number is divisible by 3 or not




solutions:





#include <stdio.h>

int main()
{
     //square
     int side=10;
     
     int area= side * side;
     
     //rectangle
     int length=5;
     int breadth=6;
     
     int area_rectangle= length * breadth;
     
     //circle
      float pi=3.14;
      float radius=5;
      float area_circle=pi*radius*radius;
      
      
      
     
    
     printf(" Area of Square %d \n",area);
     printf(" Area of Rectangle %d \n",area_rectangle);
     printf(" Area of circle == %f  \n" , area_circle);
     
     //permiter of Square
     
     printf(" Perimeter of Square %d \n",4*side);
     printf(" Perimeter of Rectangle %d \n",2*(length+breadth));
     
     //Circumference of area_circle= 2* pi* radius
     
     printf(" Circumference of circle %f \n",2*pi*radius);
     
     //simple interest
     
     float P = 100;
     float T  = 3;
     float R = 8.40;
     float SI = ((P*R*T)/100);
     printf("Simple Interest = %f %\n", SI);
      
      
}






















































	

















